@model OpenXC.Web.Models.LoggedDataQueryViewModel
@{
    ViewBag.Title = "Data";
}

<h2>Data</h2>

@using (Html.BeginForm("Data", "Devices", FormMethod.Post, new { @class = "form-inline", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label class="control-label">Start date</label>
        <div class="input-group">  
            @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control datepicker" })            
            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label">End date</label>
        <div class="input-group">
            @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control datepicker" })
            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Query Data</button>
}
@if (Model.MaxEntriesExceeded)
{
    <div class="alert alert-warning" style="margin-top: 20px;" role="alert">
        <p>Your query returned too many results. Only a subset of the results are displayed. Please refine the selected date/time range.</p>
    </div>
}
<hr />
<table id="loggedDataTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.LoggedData.First().LoggedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoggedData.First().Data)
            </th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.LoggedData.Count; i++)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => Model.LoggedData[i].LoggedTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.LoggedData[i].Data)
                </td>
            </tr>
        }
    </tbody>
</table>
@using (Html.BeginForm("DownloadCsv", "Devices", FormMethod.Post, new { @class = "form-inline", role = "form" }))
{
    @Html.HiddenFor(model => model.DeviceName)
    @Html.HiddenFor(model => model.StartDate)
    @Html.HiddenFor(model => model.EndDate)
    @Html.AntiForgeryToken()
    if (Model.LoggedData.Any())
    {
        <button type="submit" class="btn btn-primary">Download as .csv</button>
    }
}

@section scripts
{
    @Scripts.Render("~/Scripts/DataTables-1.10.3/jquery.dataTables.min.js")
    @Scripts.Render("~/Scripts/DataTables-1.10.3/dataTables.bootstrap.js")
    @Scripts.Render("~/Scripts/moment.min.js")
    @Scripts.Render("~/Scripts/bootstrap-datetimepicker.min.js")
    <script type="text/javascript">
        $(document).ready(function () {
            $('#loggedDataTable').dataTable({
                searching : false,
                stateSave : true
            });

            $('.datepicker').datetimepicker();
        });
    </script>
}