@model OpenXC.Web.Models.LoggingDeviceListViewModel

@{
    ViewBag.Title = "Logging Devices";
}

<h2>Logging Devices</h2>


@using (Html.BeginForm("AssignUpgrade", "Devices", FormMethod.Post, null))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-6">
            <a href="@Url.Action("Register")" class="btn btn-primary">Register new device</a>
        </div>
        <div class="col-lg-6">
            <div class="input-group">
                @Html.DropDownListFor(m => m.SelectedFirmwareUpgradeId, new SelectList(Model.FirmwareUpgrades, "Id", "Name"), "Choose upgrade", new { @class = "form-control" })
                <span class="input-group-btn">
                    <button class="btn btn-primary" type="submit">Assign to selected loggers</button>
                </span>
            </div><!-- /input-group -->
        </div><!-- /.col-lg-6 -->
    </div><!-- /.row -->
    <hr />
    <table class="table table-bordered table-striped">
        <tr>
            <th>
                <input type="checkbox" id="multi-select-checkbox" />
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoggingDevices.First().DeviceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoggingDevices.First().FirmwareId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoggingDevices.First().LastContactTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoggingDevices.First().HasPendingConfiguration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoggingDevices.First().LastConfigRetrieved)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoggingDevices.First().FirmwareUpgradeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LoggingDevices.First().FirmwareUpgradeAttempts)
            </th>
            <th></th>
        </tr>
    @for (int i = 0; i < Model.LoggingDevices.Count; i++)
    {
        <tr>
            <td>
                @Html.HiddenFor(modelItem => Model.LoggingDevices[i].Id)
                @Html.CheckBoxFor(modelItem => Model.LoggingDevices[i].Selected, new { @class = "table-item-checkbox" })
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.LoggingDevices[i].DeviceName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.LoggingDevices[i].FirmwareId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.LoggingDevices[i].LastContactTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.LoggingDevices[i].HasPendingConfiguration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.LoggingDevices[i].LastConfigRetrieved)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.LoggingDevices[i].FirmwareUpgradeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.LoggingDevices[i].FirmwareUpgradeAttempts)
            </td>
            <td>
                @Html.ActionLink("View Data", "Data", new { deviceName = Model.LoggingDevices[i].DeviceName }) |
                @Html.ActionLink("Send Configuration", "Configuration", new { deviceName = Model.LoggingDevices[i].DeviceName }) |
                @Html.ActionLink("Delete", "Delete", new { deviceName = Model.LoggingDevices[i].DeviceName })
            </td>
        </tr>
    }
    </table>
}
@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#multi-select-checkbox").change(function () {
                $(".table-item-checkbox").prop('checked', this.checked);
            })
        })
    </script>
}